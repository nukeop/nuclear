name: CI job - new

on:
  push:
    branches-ignore:
      - crowdin
  pull_request:
    branches-ignore:
      - crowdin

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@master
      - name: Use Node.js 18
        uses: actions/setup-node@master
        with:
          version: 18
          cache: npm
      - name: add git binaries to PATH
        if: runner.os == 'Windows'
        run: |
          echo "C:\Program Files\Git\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "C:\Program Files\Git\mingw64\libexec\git-core" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - run: npm ci
      - run: npm test

  build:
    runs-on: ${{ matrix.os }}
    needs: tests
    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        cmd: ["build:linux", "build:macos", "build:windows"]
    steps:
      - uses: actions/checkout@master
      - name: get-npm-version
        id: package-version
        uses: pchynoweth/action-get-npm-version@1.1.1
      - name: Use Node.js 18
        uses: actions/setup-node@master
        with:
          version: 18
          cache: npm
      - name: add git binaries to PATH
        if: runner.os == 'Windows'
        run: |
          echo "C:\Program Files\Git\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "C:\Program Files\Git\mingw64\libexec\git-core" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - run: npm ci
      - run: npm run ${{ matrix.cmd }}
        shell: bash
        env:
          VERSION: ${{ steps.package-version.outputs.version}}
