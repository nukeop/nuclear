name: Debug Build

on:
  workflow_dispatch:
    inputs:
      platform:
        description: "Select the platform to build"
        required: true
        default: "linux"
        type: choice
        options:
          - linux
          - macos
          - macos-arm64
          - windows

env:
  PYTHON_VERSION: "3.11"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-12, macos-14, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
          - os: macos-12
            platform: macos
          - os: macos-14
            platform: macos-arm64
          - os: windows-latest
            platform: windows

    steps:
      - name: Check platform
        shell: bash
        run: |
          if [[ "${{ matrix.platform }}" != "${{ github.event.inputs.platform }}" ]]; then
            echo "Platform '${{ matrix.platform }}' does not match selected platform '${{ github.event.inputs.platform }}'. Ending job."
            exit 1
          fi
      - uses: actions/checkout@master
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: get-npm-version
        id: package-version
        uses: pchynoweth/action-get-npm-version@1.1.1
      - name: Use Node.js 20
        uses: actions/setup-node@master
        with:
          version: 20
          cache: npm
      - name: add git binaries to PATH (Windows only)
        if: matrix.os == 'windows-latest'
        run: |
          echo "C:\Program Files\Git\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "C:\Program Files\Git\mingw64\libexec\git-core" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: install setup tools
        if: runner.os == 'macOS'
        run: |
          sudo -H pip install setuptools
      - run: npm ci
      - run: npm run build:${{ matrix.platform }}
        shell: bash
        env:
          VERSION: ${{ steps.package-version.outputs.version }}
      - name: Upload debug binaries
        uses: actions/upload-artifact@v4
        with:
          name: nuclear-binaries-${{ matrix.platform }}-debug
          path: release/*.*
